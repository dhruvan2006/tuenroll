name: Rust CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
      fail-fast: false

    steps:
    - uses: actions/checkout@v4

    - name: Set up Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    
    - name: Install dependencies on Ubuntu
      if: runner.os == 'Linux'
      run: sudo apt-get update && sudo apt-get install -y libdbus-1-dev pkg-config

    - name: Build
      run: cargo build --verbose

    - name: Run Clippy
      run: cargo clippy -- -D warnings
    
    - name: Run rustfmt
      run: cargo fmt -- --check

    - name: Run tests
      run: cargo test --verbose

  coverage:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install dependencies on Ubuntu
        run: sudo apt-get update && sudo apt-get install -y libdbus-1-dev pkg-config

      - name: Install cargo-tarpaulin
        run: cargo install cargo-tarpaulin

      - name: Generate coverage report
        run: cargo tarpaulin --verbose --workspace --out Xml

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: cobertura.xml
          fail_ci_if_error: true
          verbose: true
